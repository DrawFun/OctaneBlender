#!/usr/bin/python
from os import path
Import('env')

octane = env.Clone()

octane.Depends('../../source/blender/makesrna/intern/RNA_blender_cpp.h', 'makesrna')

sources = octane.Glob('blender/device/*.cpp') + octane.Glob('blender/render/*.cpp') + octane.Glob('blender/subd/*.cpp') + octane.Glob('blender/util/*.cpp') + octane.Glob('blender/*.cpp')

sources.remove(path.join('blender/util', 'util_view.cpp'))

incs = [] 
defs = []
cxxflags = Split(env['CXXFLAGS'])

defs.append('OCT_NAMESPACE_BEGIN=namespace oct {')
defs.append('OCT_NAMESPACE_END=}')

incs.extend('. blender/render blender/device blender/util blender/subd'.split())
incs.extend('#intern/guardedalloc #source/blender/makesrna #source/blender/makesdna'.split())
incs.extend('#source/blender/blenloader ../../source/blender/makesrna/intern'.split())
incs.extend('#extern/glew/include'.split())
incs.append(octane['BF_OIIO_INC'])
incs.append(octane['BF_BOOST_INC'])
incs.append(octane['BF_PYTHON_INC'])

if env['OURPLATFORM'] in ('win32-vc', 'win64-vc'):
    cxxflags.append('-D_CRT_SECURE_NO_WARNINGS /fp:fast /EHsc'.split())
else:
    cxxflags.append('-ffast-math'.split())

if env['OURPLATFORM'] in ('win32-vc', 'win32-mingw', 'linuxcross', 'win64-vc', 'win64-mingw'):
    incs.append(env['BF_PTHREADS_INC'])

octane.BlenderLib('bf_intern_octane', sources, incs, defs, libtype=['intern'], priority=[0], cxx_compileflags=cxxflags)

